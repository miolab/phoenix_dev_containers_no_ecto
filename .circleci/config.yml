workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # filters:
          #   branches:
          #     only: master

version: 2.1
orbs:
  heroku: circleci/heroku@1.2.4
jobs:
  build:
    machine:
      image: ubuntu-1604:202010-01
    steps:
      - checkout
      - run:
          name: Build Docker containers
          command: |
            set -x
            docker-compose build
            docker-compose run --rm app bash -c "mix --version"
            docker-compose run --rm app mix archive
            docker-compose run --rm app bash -c "node --version && npm --version"
      - run:
          name: Mix deps.get
          command: |
            set -x
            docker-compose run --rm app bash -c "ls && mix deps.get && mix deps.compile"
      - run:
          name: Npm install in assets directory
          command: |
            set -x
            docker-compose run --rm app bash -c "cd assets && ls && npm install && node node_modules/webpack/bin/webpack.js --mode development"
      - run:
          name: Mix phx.digest
          command: |
            set -x
            docker-compose run --rm app mix phx.digest
      - run:
          name: Run Docker containers
          command: |
            set -x
            docker-compose up -d
            sleep 5
            docker ps -f status=running
            docker-compose logs
      - run:
          name: Mix format
          command: |
            set -x
            docker-compose exec app bash -c "mix format --check-formatted"
      - run:
          name: Mix test
          command: |
            set -x
            docker-compose exec app bash -c "MIX_ENV=test mix test"
      - run:
          name: Finish build
          command: |
            set -x
            echo "Finished build."

  deploy:
    executor: heroku/default
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Check Docker status
          command: |
            set -x
            ls
            docker-compose ps
            docker-compose logs
      - heroku/install
      - heroku/push-docker-image:
          recursive: true
          working_directory: app
      - heroku/release-docker-image:
          working_directory: app
